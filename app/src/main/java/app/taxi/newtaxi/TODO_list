구글 지도 API 추가 / 출발지,도착지로 지도 검색 후, 리스트에서 데이터 추출 - Client
// 구글보단 네이버/다음 지도가 나음(국내 길찾기 면에서)
-> gmap 프로젝트(지도 마커 찍기만 해둠) - KEEP  =>  다음지도로 할 예정 => 구글지도
 tabbar에서 '내 정보'란 추가 / 카드 등록 및 자동 결제 방식 알아보기 - My info(만들어야 함)
-> 결제는 '카카오페이' 페이지로 넘김
TODO : 리스트 재구성, 현재 리스트는 텍스트로만 이루어져 있음 -> 태그별 텍스트로 구성하기(직접 디자인) - 해쉬태그도 괜찮을거 같음

로그인 방식 추가(Google,Facebook로그인) - Login / 제3자 로그인시 데이터베이스에 사용자 정보 추가
-> SMS본인인증은 다날 문자 인증 서비스(유료) 이용할 것임.
-> Google로그인은 휴대전화 인증 후, DB에 사용자 정보 추가할 것임.

TODO : 아이디,비밀번호 없이 로그인 버튼 눌렀을때, 오류안뜨게
TODO : 이메일 인증, 성별,전화번호 인증(문자 본인확인 인증을 통해)

TODO : 화면 해상도 대응(Scalable)

(완)카카오톡 로그인(인증,프로필,[오픈톡방])

결제 시스템(프로필 설정(Firestore))


TODO : 04/10 : GPS꺼져 있을 경우, GPS켜주기 / 퍼미션 거부시, 대응 - 현재 강제 종료됨.(추후)
TODO : 앱 최초로 켰을 때, 퍼미션 권한과 전화번호와 성별 인증(문자 인증 서비스)

 지도로 출/도착지 설정하기 / 검색(주소)로 위경도검색해서 출/도착지 설정하기
        설정후, POST 글올리기

구글 거리 계산 : JSON 파싱해서 거리얻어오기

TODO : 0424, 포인트 충전 방식
    1. 충전하기 버튼(charge) 연결 후, 결제 -> 포인트 충전(완)
    2. LOGOUT 내 정보 안으로 이동(완)

    3. My_taxi에서 파티 수락/거절(포인트 확인후, 부족하면 거절도 포함시키기)
    4. 인원수가 다 차게 되면 자동으로 화면 전환(지도와 댓글창, 포인트로 자동결제)
    5. 상세정보(다이얼로그)
    6. 게시판 정렬(

    노선 참가 Activity 생성

0429 Error Report : CustomAdapter Initialize problem.
TODO : Join.java - 1) 미터(버튼) 클릭시, 반경 표시
                    2) 좌표를 불러와 마커를 찍고 반경에 있는 것만 표시, (Posting시 출발지/도착지 좌표를 DB에 저장)
                    3) '리스트로 보기'버튼 클릭시, 반경에 있는 정보를 리스트로 표시(리스트 클릭시, 상세정보 표시(다이얼로그))
                    4) 반경안의 마커 클릭 시, 상세정보 표시(다이얼로그)
# 구글 로그인 시, 회원정보 조회
public void checkCurrentUser() {
        // [START check_current_user]
        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
        if (user != null) {
            getUserProfile();
        } else {
            Toast.makeText(getApplicationContext(),"사용자 정보 없음",Toast.LENGTH_SHORT).show();
        }
        // [END check_current_user]
    }

    public void getUserProfile() {
        // [START get_user_profile]
        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
        if (user != null) {
            // Name, email address, and profile photo Url
            String name = user.getDisplayName();
            String email = user.getEmail();
            Uri photoUrl = user.getPhotoUrl();

            // Check if user's email is verified
            boolean emailVerified = user.isEmailVerified();

            // The user's ID, unique to the Firebase project. Do NOT use this value to
            // authenticate with your backend server, if you have one. Use
            // FirebaseUser.getIdToken() instead.

        }
        // [END get_user_profile]
    }